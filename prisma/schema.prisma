generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// schema.prisma

model Organization {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  category    String

  Activity   Activity[]
  Event      Event[]
  Membership Membership[]
}

model Activity {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String       @db.ObjectId
}

model Event {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String       @db.ObjectId
}

model Membership {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String       @db.ObjectId
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email    String
  password String
  admin    Boolean

  Membership Membership[]
  Session    Session[]
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime @map("expiresAt")
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime @map("expiresAt")

  @@unique([identifier, token])
  @@map("verification_tokens")
}
